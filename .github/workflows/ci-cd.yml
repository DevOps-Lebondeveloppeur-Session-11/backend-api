# This is a basic workflow to help you get started with Actions

name: CI-CD Backend API

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]


    # ✅ Global Environment Variables
env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/backend-api:${{ github.run_number }}



jobs:
  # ✅ Run Unit Tests
  unit-test-job:
    runs-on: ubuntu-latest
    steps:

      - name: Clone Source Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test

  # ✅ Build and Push Docker Image
  build-and-push-job:
    needs: [unit-test-job]
    runs-on: ubuntu-latest
    steps:

      - name: Clone Source Code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ env.IMAGE_NAME }}

  deploy-job:
    needs: build-and-push-job
    runs-on: ubuntu-latest
    steps:

      - name: Connect to the VPS using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |

              # Pull the latest Docker image
              sudo docker pull ${{ env.IMAGE_NAME }}
